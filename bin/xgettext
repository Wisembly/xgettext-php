#!/usr/bin/env php
<?php

foreach (array(__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php') as $file) {
    if (file_exists($file)) {
        define('JSGETTEXT_COMPOSER_INSTALL', $file);
        break;
    }
}

if (!defined('JSGETTEXT_COMPOSER_INSTALL')) {
    die(
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
}

set_time_limit(0);

require_once JSGETTEXT_COMPOSER_INSTALL;

use \Exception;

use Xgettext\Xgettext,
    Xgettext\File\Finder;

$i = 1;
$input = array();
$defaults = array(
    'files' => array(),
    '-o'    => null,
    '-k'    => array('_', 'gettext', 'ngettext:1,2'),
    '-c'    => 'UTF-8',
    '-e'    => array('js', 'html'),
    '-l'    => 'Javascript',
);

while ($i < count($argv)) {
    if (preg_match('#^-[a-z]$#i', $argv[$i])) {
        $val = isset($argv[$i+1]) ? trim($argv[$i+1]) : true;

        if (!isset($input[$argv[$i]])) {
            $input[$argv[$i]] = is_array($defaults[$argv[$i]]) ? array() : null;
        }

        $input[$argv[$i]] = is_array($defaults[$argv[$i]]) ? array_merge($input[$argv[$i]], array($val)) : $val;
        $i += 2;
    } else {
        if (is_dir($argv[$i])) {
            $input['files'] = array_merge($defaults['files'], Finder::findr($argv[$i], $defaults['-e']));
        } else {
            $input['files'][] = $argv[$i];
        }
        $i++;
    }
}

$input = array_merge($defaults, $input);

try {
    new Xgettext($input['files'], $input['-o'], $input['-k'], $input['-l'], $input['-c'], true);
} catch (Exception $e) {
    fwrite(STDOUT, $e->getMessage() . <<<EOT


Usage xgettext -o [OUTPUT] -k [KEYWORDS] -c [ENCODING] [FILES]

    -o [OUTPUT]
        REQUIRED
        specify the .po output file where the keys will be dumped
        eg: -o "../../file.po"
    -k [KEYWORDS]
        specify the keywords used to find in the files the strings to be parsed
        eg: -k "__" -k "ngettext:1,2"
        default: "_" "gettext" "ngettext:1,2"
    -c [ENCODING]
        specify the encoding of the .po output file
        eg: -c "ISO-8859"
        default: "UTF-8"
    -l [LANGUAGE]
        specify which parser you want to use
        eg: -l "Handlebars"
        default: "Javascript"
    [FILES]
        REQUIRED
        files list to be parsed. Could be directory
        eg: "../file.js" "../anotherfile.html" "../still/anotherfile.js"


EOT
        );
}
